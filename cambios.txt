void procesarValor(int opc){
   espacio = 48+valor;
   if(espacio == 58){//si valor excede el 9, significa que se hará uso del espacio en blanco a la derecha
   //por lo tanto comenzarán a usarse las decenas y el valor se resetea
      valor = 0;
      if(desp==0){//cuando sucede esto por primera vez, la variable decena trae el valor de -16, pero ahora se
      //debe setear a 0, para que al sumarse con 48, empiece la cuenta de decenas de forma correcta en el valor '0'
         decena = 0;
         desp = 1; //desplazamiento se activa, para que más adelante la decena no se vuelva -16
      }
      decena++;
   }
   if(espacio == 47){//si se trata de decrementar al valor de 0, este se irá a su límite superior
      valor = 9;
      if(desp == 1){//cuando desplazamiento esté activado, significa que hay decenas cargadas, por lo tanto
      //las vamos decrementando
        decena--;
        if(decena == 0){//si la decena llega a 0, 'desp'lazamient se vuelve 0, para que adquiera el valor de -16
        //y en donde estaba una decena, se imprime el espacio en blanco (-16+48 = 32)
          desp = 0;
        }
      }
   }
   if(desp!=1){//si no se ha hecho un 'desp'lazamiento o más bien ocupado el espacio libre a la izquierda
   //se carga con -16, para que al sumarse con 48, se genere el valor 32 que es un espacio en blanco en ASCII
      decena = -16;
   }
   
   switch(opc){
      case 1://horas
      Lcd_Chr(1,13,decena+48);
      Lcd_Chr(1,14,48+valor);
      if(decena == -16){
        decena = 0;
      }
      horas = decena*10+valor;
      break;
      case 2://minutos
      Lcd_Chr(2,5,decena+48);
      Lcd_Chr(2,6,48+valor);
      if(decena == -16){
        decena = 0;
      }
      minutos = decena*10+valor;
      break;
 case 3://horas
      Lcd_Chr(2,13,decena+48);
      Lcd_Chr(2,14,48+valor);
      if(decena == -16){
        decena = 0;
      }
      segundos = decena*10+valor;
      break;
   }
   Delay_ms(20);
}

void cnfTiempoLcd(){//Captura tiempo a muestrear (TMR0)
  timing = 1;
  desp = 0;
  Lcd_Cmd(_LCD_CLEAR);               // Clear display
  Delay_ms(100);
  //Imprime plantillas de tiempo
  Lcd_Out(1,1,time);
  Delay_ms(20);
  Lcd_Out(1,9,hrs);
  Delay_ms(20);
  Lcd_Out(2,1,min);
  Delay_ms(20);
  Lcd_Out(2,9,seg);
  Delay_ms(20);
  valor = 0;
  while(timing != 4){//timing sirve para saber en qué unidad de tiempo se está ajustando el parámetro
    if(UPBtn && banderaUp==0){//incrementa unidades de tiempo con el botón de UP
       banderaUp = 1;
       valor++;
       procesarValor(timing);//dependiendo de la carga, lo procesa y lo pasa a caracter imprimible por la lcd
       Delay_ms(50);
    }
    if(!UPBtn && banderaUp==1){
       banderaUp=0;
    }
    if(OKBtn && banderaOk==0){//Se acepta el valor cargado en las unidades de tiempo, se incrementa al siguiente
    //ajuste de parámetro (unidades de tiempo), se resetean las variables usadas en 'procesaarValor(timing)'
       timing++;
       banderaOk = 1;
       decena = 0;
       valor = 0;
       desp = 0;
    }
    if(!OKBtn && banderaOk==1){
       banderaOk=0;
    }
    if(DOWNBtn && banderaDown==0){//Decrementa unidades de tiempo con el botón Down
       banderaDown = 1;
       valor--;
       procesarValor(timing);//dependiendo de la carga, lo procesa y lo pasa a caracter imprimible por la lcd
       Delay_ms(50);
    }
    if(!DOWNBtn && banderaDown==1){
       banderaDown=0;
    }
  }
  tope = horas*360+minutos*60+segundos;
}
